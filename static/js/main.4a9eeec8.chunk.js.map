{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","x","time_close","y","open","toFixed","high","low","close","options","theme","mode","chart","height","toolbar","show","background","grid","stroke","curve","width","xaxis","axisBorder","axisTicks","labels","categories","yaxis","Price","Title","styled","h1","props","accentColor","Loader","span","Container","div","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","to","rank","symbol","open_source","description","total_supply","max_supply","path","CoinsList","ul","li","bgColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","lightTheme","darkTheme","GlobalStyle","createGlobalStyle","App","useState","themeType","setTheme","onClick","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.4a9eeec8.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId],() => fetchCoinHistory(coinId),{refetchInterval: 10000});\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n        type=\"candlestick\"\n        series={[\n          {\n            name: \"Price\",\n            data: data?.map((price) => ({\n              x: price.time_close,\n              y: [\n                price.open.toFixed(2),\n                price.high.toFixed(2),\n                price.low.toFixed(2),\n                price.close.toFixed(2),\n              ],\n            })),\n          },\n        ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n                type: 'candlestick',\n                height: 350,\n                toolbar: {\n                    show: false,\n                },\n                background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            xaxis: {\n                axisBorder: { show: true },\n                axisTicks: { show: true },\n                labels: { show: true },\n                type: \"datetime\",\n                categories: data?.map((price) => price.time_close),\n            },\n            yaxis: {\n                show: false,\n            }\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;","function Price() {\n    return <h1>Price</h1>;\n  }\n  \n  export default Price;","import { useQuery } from \"react-query\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId)\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header><Link to=\"/\">뒤로가기</Link>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Open Source:</span>\n              <span>{infoData?.open_source ? \"Yes\" : \"No\"}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;","import { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;","import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#ffffff\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};","import { useState } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme  } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\n\n\nfunction App() {\n  const [themeType, setTheme] = useState(false);\n  const toggleTheme = () => {\n    setTheme(themeType => !themeType); \n  }\n  return (\n    <>\n      <ThemeProvider theme={themeType? lightTheme : darkTheme}>\n        <button onClick={toggleTheme}>테마 토글</button>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n        <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}